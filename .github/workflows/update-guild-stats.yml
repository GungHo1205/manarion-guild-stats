name: Update Guild Stats

on:
  schedule:
    # Runs every hour
    - cron: "0 * * * *"
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  update-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run guild stats script
        run: python guild-stats.py

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull origin ${{ github.ref_name }}

          # Add all relevant data files
          git add docs/guild-data.json

          # Add historical data file (combines guild history and market prices)
          if [ -f "docs/historical-data.json" ]; then
            git add docs/historical-data.json
          fi

          # Only add baseline file if it exists
          if [ -f "docs/daily-baseline.json" ]; then
            git add docs/daily-baseline.json
          fi

          # Check if there are any changes to commit
          if ! git diff --staged --quiet; then
            git commit -m "Update guild stats data - $(date)"
            
            # Push with retry logic
            for i in {1..3}; do
              if git push origin ${{ github.ref_name }}; then
                echo "Successfully pushed changes"
                break
              else
                echo "Push failed, attempt $i/3"
                if [ $i -lt 3 ]; then
                  echo "Pulling latest changes and retrying..."
                  git pull --rebase origin ${{ github.ref_name }}
                  sleep 2
                else
                  echo "All push attempts failed"
                  exit 1
                fi
              fi
            done
          else
            echo "No changes to commit"
          fi

  deploy:
    needs: update-data
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pull latest changes
        run: git pull origin ${{ github.ref_name }}

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./docs"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
